import java.io.FileOutputStream

plugins {
    id 'antlr'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
}
group = 'net.joelcourtney'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}
dependencies {
    antlr "org.antlr:antlr4:4.8"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation "org.junit.jupiter:junit-jupiter:5.6.2"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

generateGrammarSource {
    arguments += ["-no-visitor", "-no-listener"]
}

tasks.compileKotlin.dependsOn(generateGrammarSource)

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(Test).configureEach {
    outputs.upToDateWhen { false }
}

dokka {
    outputFormat = 'html'
    outputDirectory = 'doc'
}

jar {
    manifest {
        attributes "Main-Class": "MainKt"
    }
}

task(pack, type: Exec) {
    dependsOn shadowJar
    executable 'cat'
    args 'src/main/bash/wrapper.sh', 'build/libs/hadron-1.0-SNAPSHOT-all.jar'
    doFirst {
        standardOutput = new FileOutputStream('hadron')
    }
}



task(executable, type: Exec) {
    dependsOn pack
    workingDir "."
    commandLine 'chmod', '+x', 'hadron'
}